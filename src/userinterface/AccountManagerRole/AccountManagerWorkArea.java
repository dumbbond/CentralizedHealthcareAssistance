/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.AccountManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.GeneralTools;
import Business.Hospital.Appointment;
import Business.Organization.HospitalBillingOrganization;
import Business.Organization.HospitalDoctorOrganization;
import Business.Organization.InsuranceFinanceOrganization;
import Business.Organization.Organization;
import Business.Patient.LabTest;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.HospitalBillingAppointmentWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.UnderwriterPaymentAuthorizationWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author rruch
 */
public class AccountManagerWorkArea extends javax.swing.JPanel {

    /**
     * Creates new form AccountManagerWorkArea
     */
    private JPanel userProcessContainer;
    private HospitalBillingOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    EcoSystem business;


    public AccountManagerWorkArea(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
                initComponents();
        this.userProcessContainer = userProcessContainer;
        this.organization = (HospitalBillingOrganization) organization;
        this.enterprise = enterprise;
        this.userAccount = account;
        this.business=business;
       // populateRequestTable();

        //listener of the table
        populateTable();
              addListnerToLabTestTable();
       
       
    }
    
    public void addListnerToLabTestTable() {

        tblShowRequests.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (tblShowRequests.getSelectedRow() > -1) {
                    int selectedRow = tblShowRequests.getSelectedRow();
                    Appointment apt = (Appointment) tblShowRequests.getValueAt(selectedRow, 1);
                    HospitalBillingAppointmentWorkRequest myRequest = (HospitalBillingAppointmentWorkRequest) tblShowRequests.getValueAt(selectedRow, 0);
                    if (myRequest.getStatus().equalsIgnoreCase("complete") || myRequest.getStatus().equalsIgnoreCase("cancel") || myRequest.getStatus().equalsIgnoreCase("paid in cash")) {
                        btnCancel.setEnabled(false);
                        btnAssignToMe.setEnabled(false);
                        btnCancel.setEnabled(false);
                        btnPayInCash.setEnabled(false);
                        btnSendClaimToInsurance.setEnabled(false);
                    } else {
                        btnCancel.setEnabled(true);
                        if (myRequest.getReceiver() == userAccount) {
                            btnAssignToMe.setEnabled(false);
                                                    btnPayInCash.setEnabled(true);
                        btnSendClaimToInsurance.setEnabled(true);
                        } else {
                            btnAssignToMe.setEnabled(true);
                        }

                    }

                }
            }

        });

    }
    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblShowRequests.getModel();

        model.setRowCount(0);
        for (WorkRequest request : organization.getWorkQueue().getWorkRequestList()) {

            HospitalBillingAppointmentWorkRequest myRequest = (HospitalBillingAppointmentWorkRequest) request;
            System.out.println("myRequest -- " + myRequest);
            Appointment apt = myRequest.getAppointment();
            Object[] row = new Object[6];

            row[0] = myRequest;
            row[1] = apt;
            row[2] = apt.getAptStatus();
            row[3] = apt.getPatient();
            row[4] = myRequest.getReceiver();
            row[5] = myRequest.getStatus();


            model.addRow(row);
        }


    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblFormTitle = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblShowRequests = new javax.swing.JTable();
        btnAssignToMe = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnReferesh = new javax.swing.JButton();
        btnPayInCash = new javax.swing.JButton();
        btnSendClaimToInsurance = new javax.swing.JButton();

        lblFormTitle.setFont(new java.awt.Font("Calibri", 3, 36)); // NOI18N
        lblFormTitle.setText("Account Manager");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        tblShowRequests.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Appointment Id", "Appointment Status", "Patient", "Owner", "Request Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblShowRequests.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tblShowRequests);

        btnAssignToMe.setText("Assign to me");
        btnAssignToMe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignToMeActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnReferesh.setText("Refresh");
        btnReferesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefereshActionPerformed(evt);
            }
        });

        btnPayInCash.setText("Paid in Cash");
        btnPayInCash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPayInCashActionPerformed(evt);
            }
        });

        btnSendClaimToInsurance.setText("Claim Insurance");
        btnSendClaimToInsurance.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendClaimToInsuranceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(368, 368, 368)
                .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(390, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnReferesh)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(661, 661, 661)
                            .addComponent(btnAssignToMe, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 939, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(btnPayInCash, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSendClaimToInsurance, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE)))
                .addGap(171, 171, 171))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBack, javax.swing.GroupLayout.DEFAULT_SIZE, 34, Short.MAX_VALUE)
                    .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addComponent(btnReferesh)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAssignToMe)
                    .addComponent(btnCancel))
                .addGap(18, 18, 18)
                .addComponent(btnPayInCash)
                .addGap(18, 18, 18)
                .addComponent(btnSendClaimToInsurance)
                .addGap(516, 516, 516))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
//        if (JOptionPane.YES_OPTION == JOptionPane.showConfirmDialog(null, "If you go back without clicking submit, you might loose the changes!", "Confirmation Required", JOptionPane.YES_NO_OPTION)) {
//            userProcessContainer.remove(this);
//            Component[] componentArray = userProcessContainer.getComponents();
//            Component component = componentArray[componentArray.length - 1];
//            PatientHistoryJPanel dwjp = (PatientHistoryJPanel) component;
//            dwjp.populate();
//            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
//            layout.previous(userProcessContainer);
//        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnAssignToMeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignToMeActionPerformed

        int selectedRow = tblShowRequests.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row!");
            return;
        }

        HospitalBillingAppointmentWorkRequest myRequest = (HospitalBillingAppointmentWorkRequest) tblShowRequests.getValueAt(selectedRow, 0);
        myRequest.setReceiver(userAccount);
        myRequest.setStatus("assigned");

        populateTable();
    }//GEN-LAST:event_btnAssignToMeActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:

        int selectedRow = tblShowRequests.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row!");
            return;
        }
        HospitalBillingAppointmentWorkRequest myRequest = (HospitalBillingAppointmentWorkRequest) tblShowRequests.getValueAt(selectedRow, 0);

        myRequest.setReceiver(userAccount);
        myRequest.setStatus("cancel");
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnRefereshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefereshActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRefereshActionPerformed

    private void btnPayInCashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPayInCashActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblShowRequests.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row!");
            return;
        }
        HospitalBillingAppointmentWorkRequest myRequest = (HospitalBillingAppointmentWorkRequest) tblShowRequests.getValueAt(selectedRow, 0);

        myRequest.setReceiver(userAccount);
        myRequest.setStatus("paid in cash");
    }//GEN-LAST:event_btnPayInCashActionPerformed

    private void btnSendClaimToInsuranceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendClaimToInsuranceActionPerformed
        // TODO add your handling code here:
        try{
        int selectedRow = tblShowRequests.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row!");
            return;
        }
        HospitalBillingAppointmentWorkRequest myRequest = (HospitalBillingAppointmentWorkRequest) tblShowRequests.getValueAt(selectedRow, 0);
               InsuranceFinanceOrganization org =  GeneralTools.searchForInsuranceCompany(myRequest.getAppointment().getPatient(), business);
       if(org == null){
           JOptionPane.showMessageDialog(null, "The Patient does not have an insurance, please collect CASH.");
           return;
       }

        myRequest.setReceiver(userAccount);
        myRequest.setSecondSender(userAccount);
        myRequest.setStatus("sent for claim"); 
        
        UnderwriterPaymentAuthorizationWorkRequest newReq = new UnderwriterPaymentAuthorizationWorkRequest();
        newReq.setPtient(myRequest.getAppointment().getPatient());
        int appointmentAmount = myRequest.getAppointment().getAppointmentAmount();
        newReq.setAmount((double)appointmentAmount);
        newReq.setSender(userAccount);
        newReq.setStatus("pending");
       
        GeneralTools.InsuranceUnderWritingRequestGen(myRequest.getAppointment().getPatient(), "Appointment", (double)appointmentAmount, userAccount, business);
        
       org.getWorkQueue().getWorkRequestList().add(myRequest);
        }catch(Exception e){
            System.out.println("Success!");
        }
        
    }//GEN-LAST:event_btnSendClaimToInsuranceActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignToMe;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnPayInCash;
    private javax.swing.JButton btnReferesh;
    private javax.swing.JButton btnSendClaimToInsurance;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblFormTitle;
    private javax.swing.JTable tblShowRequests;
    // End of variables declaration//GEN-END:variables
}
