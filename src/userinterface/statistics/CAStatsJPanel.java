/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.statistics;

import Business.Disease;
import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.CAPatientManagementOrganization;
import Business.Organization.Organization;
import Business.Patient.MedicalFile;
import Business.Patient.Patient;
import Business.UserAccount.UserAccount;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author darsh
 */
public class CAStatsJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CAStatsJPanel
     */
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem business;
    
    public CAStatsJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
        loadDataTable();
    }
    
    private void loadDataTable(){
    
        Map<Disease, Integer> stats = buildStats();
        
        DefaultTableModel dtm = (DefaultTableModel)tblStats.getModel();
        dtm.setRowCount(0);
        
        for (Map.Entry<Disease, Integer> entry : stats.entrySet() ){
            Object[] row = new Object[dtm.getColumnCount()];
            row[0]=entry.getKey();
            row[1]=entry.getValue();
            dtm.addRow(row);
        } 
    
    }
    
    private void populatePieChart(){
        Map<Disease, Integer> stats = buildStats();
        DefaultPieDataset pieDataSet = new DefaultPieDataset();
        
        for (Map.Entry<Disease, Integer> entry : stats.entrySet() ){
          pieDataSet.setValue(entry.getKey().toString(), entry.getValue());
          
        } 
        
        JFreeChart chart = ChartFactory.createPieChart("Active Disease Spread", pieDataSet, true, true,true);
        PiePlot p = (PiePlot)chart.getPlot();
        ChartFrame frame = new ChartFrame("Active Disease Spread", chart);
        frame.setVisible(true);
        frame.setSize(450,500);
    }
    
    private Map<Disease, Integer> buildStats(){
    
        Map<Disease, Integer> statsMap = new HashMap<Disease, Integer>();
        
        for (Organization org : enterprise.getOrganizationDirectory().getOrganizationList()){
        
            if (org instanceof CAPatientManagementOrganization){
                
               for (Patient pat : ((CAPatientManagementOrganization)org).getPatientDirectory().getPatientList()){
                   
                   for (MedicalFile file : pat.getMedicalFile()){
                       
                       if (!file.isIsCured()){
                           
                           if (statsMap.containsKey(file.getProblemDiseases())){
                               int value = statsMap.get(file.getProblemDiseases()) + 1;
                               statsMap.put(file.getProblemDiseases(), value);
                           } else {
                               statsMap.put(file.getProblemDiseases(), 1);
                           }
                           
                       }       
                       
                   }
                   
               }
                
            }
        
        }
        
     return statsMap;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblStats = new javax.swing.JTable();
        btnShowPieChart = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setText("Statistics");

        tblStats.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Disease", "Patient Count"
            }
        ));
        jScrollPane1.setViewportView(tblStats);

        btnShowPieChart.setText("Show Pie Chart");
        btnShowPieChart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowPieChartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(529, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(639, 639, 639))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(519, 519, 519))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnShowPieChart)
                        .addGap(686, 686, 686))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowPieChart)
                .addContainerGap(420, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnShowPieChartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowPieChartActionPerformed
        // TODO add your handling code here:
        populatePieChart();
    }//GEN-LAST:event_btnShowPieChartActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnShowPieChart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblStats;
    // End of variables declaration//GEN-END:variables
}
