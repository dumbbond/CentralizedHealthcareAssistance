/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.FinanceManagerRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Insurance.Insurer;
import Business.Organization.InsuranceAgentOrganization;
import Business.Organization.InsuranceFinanceOrganization;
import Business.Organization.Organization;
import Business.Patient.LabTest;
import Business.Patient.Patient;
import Business.Patient.TestDetails;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceManagerApprovalForNewInsuranceWorkRequest;
import Business.WorkQueue.FinanceManagerRetrieveWorkRequest;
import Business.WorkQueue.InsuranceAgentInsurancePlanProposalWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Component;
import java.util.Calendar;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import userinterface.UnderwriterRole.UnderwriterWorkAreaJPanel;

/**
 *
 * @author Team NullPointerException
 */
public class FinanceManagerWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form FinanceManagerWorkAreaJPanel
     */
    private JPanel userProcessContainer;
    private EcoSystem business;
    private UserAccount userAccount;
    private Enterprise enterprise;
    private InsuranceFinanceOrganization finOrganization;
    private Insurer insuredPatient;

    public FinanceManagerWorkAreaJPanel() {
        initComponents();
    }

    public FinanceManagerWorkAreaJPanel(JPanel userProcessContainer, UserAccount userAccount, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.userAccount = userAccount;
        this.finOrganization = (InsuranceFinanceOrganization) organization;
        this.business = business;
        this.enterprise = enterprise;
        populateWorkRequests();
        addListnerToLabTestTable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtInsurerId = new javax.swing.JTextField();
        lblInsurertId = new javax.swing.JLabel();
        lblFolioNum = new javax.swing.JLabel();
        txtFolioNum = new javax.swing.JTextField();
        btnRetrieveApp = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblInsurerDetails = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFinanceManagerUnderwriterWorkRequest = new javax.swing.JTable();
        btnAssignUnderwriterReq = new javax.swing.JButton();
        btnProcessUnderwriterRequest = new javax.swing.JButton();
        dateChooserComboInsD = new datechooser.beans.DateChooserCombo();
        lblDateOfInsurance = new javax.swing.JLabel();
        lblExpirationDate = new javax.swing.JLabel();
        dateChooserComboExpD = new datechooser.beans.DateChooserCombo();
        txtPremiumAmount = new javax.swing.JTextField();
        lblPremiumAmount = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblFinanceManagerAgentWorkRequest = new javax.swing.JTable();
        btnAssignAgentRequest = new javax.swing.JButton();
        btnProcessAgentRequest = new javax.swing.JButton();
        lblFolioNum1 = new javax.swing.JLabel();
        txtFolioNum1 = new javax.swing.JTextField();
        btnViewInsurerHistory = new javax.swing.JButton();
        lblFormTitle = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        lblFolioNum2 = new javax.swing.JLabel();
        txtShowInsurerId = new javax.swing.JTextField();

        lblInsurertId.setText("Insurer Id:");

        lblFolioNum.setText("Folio Number:");

        btnRetrieveApp.setText("Retrieve Insurer Application");
        btnRetrieveApp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetrieveAppActionPerformed(evt);
            }
        });

        tblInsurerDetails.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Folio Number", "Date of Insurance", "Date Of Expiration", "Patient Name", "Insured Amount", "Premium Paid"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblInsurerDetails);

        tblFinanceManagerUnderwriterWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Patient Name", "Status", "Sender", "Receiver", "Message"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tblFinanceManagerUnderwriterWorkRequest);

        btnAssignUnderwriterReq.setText("Assign to me");
        btnAssignUnderwriterReq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignUnderwriterReqActionPerformed(evt);
            }
        });

        btnProcessUnderwriterRequest.setText("Process");
        btnProcessUnderwriterRequest.setEnabled(false);
        btnProcessUnderwriterRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessUnderwriterRequestActionPerformed(evt);
            }
        });

        dateChooserComboInsD.setCalendarPreferredSize(new java.awt.Dimension(350, 210));
        dateChooserComboInsD.setNothingAllowed(false);
        dateChooserComboInsD.setEnabled(false);

        lblDateOfInsurance.setText("Insurance Date:");

        lblExpirationDate.setText("Expiration Date:");

        dateChooserComboExpD.setCalendarPreferredSize(new java.awt.Dimension(350, 210));
        dateChooserComboExpD.setNothingAllowed(false);
        dateChooserComboExpD.setEnabled(false);

        txtPremiumAmount.setEnabled(false);

        lblPremiumAmount.setText("Premium Amount:");

        tblFinanceManagerAgentWorkRequest.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Id", "Patient Name", "Insurance Amount", "Duration", "Status", "Sender", "Receiver"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblFinanceManagerAgentWorkRequest);

        btnAssignAgentRequest.setText("Assign to me");
        btnAssignAgentRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssignAgentRequestActionPerformed(evt);
            }
        });

        btnProcessAgentRequest.setText("Process");
        btnProcessAgentRequest.setEnabled(false);
        btnProcessAgentRequest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProcessAgentRequestActionPerformed(evt);
            }
        });

        lblFolioNum1.setText("Folio Number:");

        txtFolioNum1.setEnabled(false);
        txtFolioNum1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtFolioNum1ActionPerformed(evt);
            }
        });

        btnViewInsurerHistory.setText("View Details");
        btnViewInsurerHistory.setEnabled(false);
        btnViewInsurerHistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewInsurerHistoryActionPerformed(evt);
            }
        });

        lblFormTitle.setFont(new java.awt.Font("Calibri", 3, 36)); // NOI18N
        lblFormTitle.setText("Finance Manager Home Page");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel10.setText("» Underwriter Patient Detail Requests");

        jLabel11.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel11.setText("» Agent Insurance Approval Requests");

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel12.setText("» Insurar Details");

        lblFolioNum2.setText("Insurer Id :");

        txtShowInsurerId.setEnabled(false);
        txtShowInsurerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtShowInsurerIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnProcessAgentRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(894, 894, 894)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(lblPremiumAmount)
                            .addComponent(lblDateOfInsurance)
                            .addComponent(lblFolioNum1)
                            .addComponent(lblExpirationDate)
                            .addComponent(lblFolioNum2))
                        .addGap(61, 61, 61)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFolioNum1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserComboInsD, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(dateChooserComboExpD, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPremiumAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtShowInsurerId, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jSeparator2))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(btnProcessUnderwriterRequest, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(247, 247, 247)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 430, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblFolioNum)
                                                .addGap(31, 31, 31)
                                                .addComponent(txtFolioNum, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(lblInsurertId)
                                                .addGap(31, 31, 31)
                                                .addComponent(txtInsurerId, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                        .addGap(47, 47, 47)
                                        .addComponent(btnRetrieveApp))
                                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 560, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(53, 53, 53)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnAssignUnderwriterReq, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(217, 217, 217))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(btnAssignAgentRequest)
                                                .addGap(109, 109, 109)
                                                .addComponent(btnViewInsurerHistory))))
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(174, 174, 174)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(587, 587, 587)
                                .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 468, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(lblFormTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblInsurertId)
                                    .addComponent(txtInsurerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblFolioNum)
                                    .addComponent(txtFolioNum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(btnRetrieveApp, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnAssignUnderwriterReq, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnProcessUnderwriterRequest, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(17, 17, 17)))))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFolioNum2)
                            .addComponent(txtShowInsurerId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblFolioNum1)
                            .addComponent(txtFolioNum1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblDateOfInsurance)
                            .addComponent(dateChooserComboInsD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(31, 31, 31)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblExpirationDate)
                            .addComponent(dateChooserComboExpD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblPremiumAmount)
                            .addComponent(txtPremiumAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addComponent(jLabel11)
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAssignAgentRequest)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnViewInsurerHistory)
                        .addComponent(btnProcessAgentRequest)))
                .addGap(299, 299, 299))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnRetrieveAppActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetrieveAppActionPerformed
        populateTable();
    }//GEN-LAST:event_btnRetrieveAppActionPerformed

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) tblInsurerDetails.getModel();
        model.setRowCount(0);
        for (Insurer ins : finOrganization.getInsurerDirectory().getInsurerList()) {
            if (ins.getFolioNumber().equals(txtFolioNum.getText())) {
                Object[] row = new Object[6];
                row[0] = ins;
                row[1] = ins.getDateOfInsurance();
                row[2] = ins.getDateOfExpiration();
                row[3] = ins.getPatient();
                row[4] = ins.getInsuredAmount();
                row[5] = ins.getPremiumPerMonth();

                model.addRow(row);
            }
        }
    }

    private void btnAssignUnderwriterReqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignUnderwriterReqActionPerformed
        int selectedRow = tblFinanceManagerUnderwriterWorkRequest.getSelectedRow();

        if (selectedRow < 0) {
            return;
        }

        WorkRequest request = (WorkRequest) tblFinanceManagerUnderwriterWorkRequest.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateFinanceManagerUnderwriterWorkQueue();
        btnProcessUnderwriterRequest.setEnabled(true);
    }//GEN-LAST:event_btnAssignUnderwriterReqActionPerformed

    private void btnProcessUnderwriterRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessUnderwriterRequestActionPerformed
        int selectedRow = tblFinanceManagerUnderwriterWorkRequest.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a request to continue.");
            return;
        }

        FinanceManagerRetrieveWorkRequest request = (FinanceManagerRetrieveWorkRequest) tblFinanceManagerUnderwriterWorkRequest.getValueAt(selectedRow, 0);
        for (Insurer insurer : finOrganization.getInsurerDirectory().getInsurerList()) {
            if (insurer.getInsurerId() == request.getInsurer().getInsurerId()) {
                insuredPatient = insurer;
            }
        }

        request.setStatus("Processed");
        Component[] comps = this.userProcessContainer.getComponents();
        for (Component comp : comps) {
            if (comp instanceof UnderwriterWorkAreaJPanel) {
                UnderwriterWorkAreaJPanel underwrite = (UnderwriterWorkAreaJPanel) comp;
            
            }
        }
    }//GEN-LAST:event_btnProcessUnderwriterRequestActionPerformed

    private void btnAssignAgentRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssignAgentRequestActionPerformed
        int selectedRow = tblFinanceManagerAgentWorkRequest.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row!");
            return;
        }

        FinanceManagerApprovalForNewInsuranceWorkRequest request = (FinanceManagerApprovalForNewInsuranceWorkRequest) tblFinanceManagerAgentWorkRequest.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Pending");
        populateFinanceManagerAgentWorkQueue();

        btnViewInsurerHistory.setEnabled(true);
    }//GEN-LAST:event_btnAssignAgentRequestActionPerformed

    private void btnProcessAgentRequestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProcessAgentRequestActionPerformed
        try{
        int selectedRow = tblFinanceManagerAgentWorkRequest.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row to continue");
            return;
        }
        InsuranceAgentInsurancePlanProposalWorkRequest request = new InsuranceAgentInsurancePlanProposalWorkRequest();
        double insuranceAmount = Double.parseDouble(String.valueOf(tblFinanceManagerAgentWorkRequest.getValueAt(selectedRow, 2)));
            Patient ptnt = (Patient)tblFinanceManagerAgentWorkRequest.getValueAt(selectedRow, 1);
        int insurerId = Integer.parseInt(String.valueOf(tblFinanceManagerAgentWorkRequest.getValueAt(selectedRow, 0)));
        Calendar dateOfInsurance = dateChooserComboInsD.getSelectedDate();
        Calendar dateOfExpiry = dateChooserComboExpD.getSelectedDate();
        Insurer insuredPat = new Insurer(ptnt, insurerId, txtFolioNum1.getText(), insuranceAmount, Double.parseDouble(txtPremiumAmount.getText()), dateOfInsurance.getTime(), dateOfExpiry.getTime());
        Calendar requestedExpiry = dateOfInsurance;
        requestedExpiry.add(Calendar.YEAR, Integer.parseInt(String.valueOf(tblFinanceManagerAgentWorkRequest.getValueAt(selectedRow, 3))));
        if (dateOfExpiry.before(requestedExpiry)) {
            int reply = JOptionPane.showConfirmDialog(null, "Expiry Date is less than Requested duration. Do you want to continue?", "Expiry Date Warning!", JOptionPane.YES_NO_OPTION);
            if (reply == JOptionPane.YES_OPTION) {
                insuredPat.setDateOfExpiration(dateOfExpiry.getTime());
            } else {
                return;
            }
        }
        request.setInsuredPatient(insuredPat);
        request.setSender(userAccount);
        request.setStatus("approved");
        tblFinanceManagerAgentWorkRequest.setValueAt("Sent Proposal", selectedRow, 4);
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof InsuranceAgentOrganization) {
                org = organization;
                break;
            }
        }
        if (org != null) {
            org.getWorkQueue().getWorkRequestList().add(request);
        }
        JOptionPane.showMessageDialog(null, "Proposal sent to Agent.");
        }catch(NumberFormatException e){
        JOptionPane.showMessageDialog(null, "Please select proper number format!");
        return;
        }
    }//GEN-LAST:event_btnProcessAgentRequestActionPerformed

    private void btnViewInsurerHistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewInsurerHistoryActionPerformed
        txtFolioNum1.setEnabled(true);
        txtPremiumAmount.setEnabled(true);
        dateChooserComboInsD.setEnabled(true);
        dateChooserComboExpD.setEnabled(true);
        dateChooserComboInsD.setMinDate(Calendar.getInstance());
        Calendar dateExpMin = Calendar.getInstance();
        Calendar dateExpMax = Calendar.getInstance();
        Calendar dateIns = Calendar.getInstance();
        dateIns.add(Calendar.DATE, 15);
        dateChooserComboInsD.setMaxDate(dateIns);
        dateExpMin.add(Calendar.YEAR, 15);
        dateExpMax.add(Calendar.YEAR, 45);
        dateChooserComboExpD.setMinDate(dateExpMin);
        dateChooserComboExpD.setMaxDate(dateExpMax);
        btnProcessAgentRequest.setEnabled(true);

    }//GEN-LAST:event_btnViewInsurerHistoryActionPerformed

    private void txtFolioNum1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtFolioNum1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtFolioNum1ActionPerformed

    private void txtShowInsurerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtShowInsurerIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtShowInsurerIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssignAgentRequest;
    private javax.swing.JButton btnAssignUnderwriterReq;
    private javax.swing.JButton btnProcessAgentRequest;
    private javax.swing.JButton btnProcessUnderwriterRequest;
    private javax.swing.JButton btnRetrieveApp;
    private javax.swing.JButton btnViewInsurerHistory;
    private datechooser.beans.DateChooserCombo dateChooserComboExpD;
    private datechooser.beans.DateChooserCombo dateChooserComboInsD;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblDateOfInsurance;
    private javax.swing.JLabel lblExpirationDate;
    private javax.swing.JLabel lblFolioNum;
    private javax.swing.JLabel lblFolioNum1;
    private javax.swing.JLabel lblFolioNum2;
    private javax.swing.JLabel lblFormTitle;
    private javax.swing.JLabel lblInsurertId;
    private javax.swing.JLabel lblPremiumAmount;
    private javax.swing.JTable tblFinanceManagerAgentWorkRequest;
    private javax.swing.JTable tblFinanceManagerUnderwriterWorkRequest;
    private javax.swing.JTable tblInsurerDetails;
    private javax.swing.JTextField txtFolioNum;
    private javax.swing.JTextField txtFolioNum1;
    private javax.swing.JTextField txtInsurerId;
    private javax.swing.JTextField txtPremiumAmount;
    private javax.swing.JTextField txtShowInsurerId;
    // End of variables declaration//GEN-END:variables

    private void populateFinanceManagerUnderwriterWorkQueue() {
        DefaultTableModel model = (DefaultTableModel) tblFinanceManagerUnderwriterWorkRequest.getModel();

        model.setRowCount(0);

        for (WorkRequest request : finOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof FinanceManagerRetrieveWorkRequest) {
                if (!request.getStatus().equals("Approved")) {
                    Object[] row = new Object[6];
                    row[0] = request;
                    row[1] = ((FinanceManagerRetrieveWorkRequest) request).getInsurer().getPatient().getName();
                    row[2] = request.getStatus();
                    row[3] = request.getSender().getEmployee().getName();
                    row[4] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                    row[5] = request.getMessage();

                    model.addRow(row);
                }
            }
        }
    }

    private void populateWorkRequests() {
        populateFinanceManagerUnderwriterWorkQueue();
        populateFinanceManagerAgentWorkQueue();
    }
    
        public void addListnerToLabTestTable() {

        tblFinanceManagerAgentWorkRequest.getSelectionModel().addListSelectionListener(new ListSelectionListener() {
            @Override
            public void valueChanged(ListSelectionEvent event) {
                if (tblFinanceManagerAgentWorkRequest.getSelectedRow() > -1) {
                    int selectedRow = tblFinanceManagerAgentWorkRequest.getSelectedRow();
                    FinanceManagerApprovalForNewInsuranceWorkRequest req = (FinanceManagerApprovalForNewInsuranceWorkRequest)  tblFinanceManagerAgentWorkRequest.getValueAt(selectedRow, 0);
                        txtShowInsurerId.setText(req.toString());
                        
                        
                                txtFolioNum1.setEnabled(true);
        txtPremiumAmount.setEnabled(true);
        dateChooserComboInsD.setEnabled(true);
        dateChooserComboExpD.setEnabled(true);
        dateChooserComboInsD.setMinDate(Calendar.getInstance());
        Calendar dateExpMin = Calendar.getInstance();
        Calendar dateExpMax = Calendar.getInstance();
        Calendar dateIns = Calendar.getInstance();
        dateIns.add(Calendar.DATE, 15);
        dateChooserComboInsD.setMaxDate(dateIns);
        dateExpMin.add(Calendar.YEAR, 15);
        dateExpMax.add(Calendar.YEAR, 45);
        dateChooserComboExpD.setMinDate(dateExpMin);
        dateChooserComboExpD.setMaxDate(dateExpMax);
        btnProcessAgentRequest.setEnabled(true);

                }
            }

        });

    }

    private void populateFinanceManagerAgentWorkQueue() {
        DefaultTableModel model = (DefaultTableModel) tblFinanceManagerAgentWorkRequest.getModel();

        model.setRowCount(0);

        for(WorkRequest request : finOrganization.getWorkQueue().getWorkRequestList()) {
            if (request instanceof FinanceManagerApprovalForNewInsuranceWorkRequest) {
                FinanceManagerApprovalForNewInsuranceWorkRequest fawr = (FinanceManagerApprovalForNewInsuranceWorkRequest) request;
                if (fawr.getInsurePatient() != null) {
                    Object[] row = new Object[7];
                    row[0] = request;
                    row[1] = fawr.getInsurePatient();
                    row[2] = fawr.getInsuranceAmount();
                    row[3] = fawr.getDuration();
                    row[4] = request.getStatus();
                    row[5] = request.getSender().getEmployee().getName();
                    row[6] = request.getReceiver() == null ? null : request.getReceiver().getEmployee().getName();
                    

                    model.addRow(row);
                }
            }
        }
    }
}
