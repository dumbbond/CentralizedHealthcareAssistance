/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package userinterface.CAOTPBot;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.CAFetchPatientRequest;
import Business.WorkQueue.CANewPatientOTPAuthRequest;
import Business.WorkQueue.CANewPatientVerifyRequest;
import Business.WorkQueue.CAOTPAuthorizationWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.Color;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;
import javax.swing.JPanel;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author darsh
 */
public class CAOTPBotJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CAOTPBotJPanel
     */
    
    private JPanel userProcessContainer;
    private UserAccount account;
    private Organization organization;
    private Enterprise enterprise;
    private EcoSystem  business;
    
    public CAOTPBotJPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.business = business;
      
        String search = txtSearch.getText();
       
        loadData(search);
    }

    
    public void loadData(String search){
        DefaultTableModel dtm = (DefaultTableModel)tblLogs.getModel();
        dtm.setRowCount(0);
        
        for (WorkRequest req: organization.getWorkQueue().getWorkRequestList()){
            
            
            
             if (!(txtSearch.getText().equals("") || txtSearch.getText().isEmpty())){ 
             
             if (req instanceof CAOTPAuthorizationWorkRequest){
              if  (!search.equalsIgnoreCase(String.valueOf(((CAOTPAuthorizationWorkRequest)req).getPatientId()))) continue;
            } else if (req instanceof CAFetchPatientRequest){
              if  (!search.equalsIgnoreCase(String.valueOf(((CAFetchPatientRequest)req).getPatientId()))) continue;
            }
             else if (req instanceof CANewPatientOTPAuthRequest){
                if (!search.equalsIgnoreCase(((CANewPatientOTPAuthRequest)req).getEmail())) continue;
            }
             else if (req instanceof CANewPatientVerifyRequest){
                if (!search.equalsIgnoreCase(((CANewPatientVerifyRequest)req).getEmailID())) continue;
            }
             }    
            
            
            Object[] row = new Object[dtm.getColumnCount()];
            if (req instanceof CAOTPAuthorizationWorkRequest){
                row[0]="OTP Request";
            } else if (req instanceof CAFetchPatientRequest){
                row[0]="Patient Request";
            }
             else if (req instanceof CANewPatientOTPAuthRequest){
                row[0]="New Patient OTP Request";
            }
             else if (req instanceof CANewPatientVerifyRequest){
                row[0]="New Patient OTP Verify";
            }
            
            row[1]=req.getMessage();
            row[2]=req.getSender();
            
            if (req instanceof CAOTPAuthorizationWorkRequest){
                row[3]=((CAOTPAuthorizationWorkRequest)req).getPatientId();
            } else if (req instanceof CAFetchPatientRequest){
                row[3]= ((CAFetchPatientRequest)req).getPatientId();
            }
             else if (req instanceof CANewPatientOTPAuthRequest){
                row[3]= ((CANewPatientOTPAuthRequest)req).getEmail();
            }
             else if (req instanceof CANewPatientVerifyRequest){
                row[3]=((CANewPatientVerifyRequest)req).getEmailID();
            }
            
            row[4]=req.getStatus();
            row[5]=req.getRequestDate();
            row[6]=req.getResolveDate();
            
            dtm.addRow(row);
        }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblLogs = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        btnSearch = new javax.swing.JButton();
        btnResetSearch = new javax.swing.JButton();

        tblLogs.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Request Type", "Message", "Sender", "OTP Receiver", "Status", "Request Date", "Resolve Date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblLogs);

        jLabel1.setText("Enter OTP Receiver Email/Patient ID here:");

        btnSearch.setText("Search");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        btnResetSearch.setText("Reset Search");
        btnResetSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(90, 90, 90)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1289, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 547, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(48, 48, 48)
                        .addComponent(btnSearch)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnResetSearch)))
                .addContainerGap(121, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(btnSearch)
                    .addComponent(btnResetSearch))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 659, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(246, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
         loadData(txtSearch.getText());
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnResetSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetSearchActionPerformed
        // TODO add your handling code here:
        txtSearch.setText("");
        loadData("");
    }//GEN-LAST:event_btnResetSearchActionPerformed

    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnResetSearch;
    private javax.swing.JButton btnSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblLogs;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
